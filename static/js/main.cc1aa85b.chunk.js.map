{"version":3,"sources":["App.js","index.js"],"names":["App","jRef","useRef","tableRef","useEffect","current","jspreadsheet","data","minDimensions","toolbar","type","content","onclick","undo","redo","download","k","v","ref","onClick","jexcel","insertRow","value","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAuGeA,EAjGH,WACV,IAAMC,EAAOC,iBAAO,MACdC,EAAWD,iBAAO,MAExBE,qBAAU,WAMHH,EAAKI,QAAQC,eAChBH,EAASE,QAAUC,IAAaL,EAAKI,QAAN,YAAC,eANlB,CACdE,KAAM,CAAC,IACPC,cAAe,CAAC,GAAI,MAIW,IACjBC,QACV,CACE,CACEC,KAAM,IACNC,QAAS,OACTC,QAAS,WACPT,EAASE,QAAQQ,SAGrB,CACEH,KAAM,IACNC,QAAS,OACTC,QAAS,WACPT,EAASE,QAAQS,SAGrB,CACEJ,KAAM,IACNC,QAAS,OACTC,QAAS,WACPT,EAASE,QAAQU,aAGrB,CACEL,KAAM,SACNM,EAAG,cACHC,EAAG,CAAC,QAAS,YAEf,CACEP,KAAM,SACNM,EAAG,YACHC,EAAG,CAAC,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,SAE7F,CACEP,KAAM,IACNC,QAAS,oBACTK,EAAG,aACHC,EAAG,QAEL,CACEP,KAAM,IACNC,QAAS,sBACTK,EAAG,aACHC,EAAG,UAEL,CACEP,KAAM,IACNC,QAAS,qBACTK,EAAG,aACHC,EAAG,SAEL,CACEP,KAAM,IACNC,QAAS,cACTK,EAAG,cACHC,EAAG,QAEL,CACEP,KAAM,QACNC,QAAS,oBACTK,EAAG,SAEL,CACEN,KAAM,QACNC,QAAS,oBACTK,EAAG,2BAKZ,IAMH,OACE,gCACE,qBAAKE,IAAKjB,IACV,uBACA,uBAAOS,KAAK,SAASS,QARV,WACblB,EAAKI,QAAQe,OAAOC,aAOoBC,MAAM,oBC7FlDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cc1aa85b.chunk.js","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport jspreadsheet from \"jspreadsheet-ce\";\n\nimport \"../node_modules/jspreadsheet-ce/dist/jexcel.css\";\nimport './App.css';\n\nconst App = () => {\n  const jRef = useRef(null);\n  const tableRef = useRef(null);\n\n  useEffect(() => {\n    const options = {\n      data: [[]],\n      minDimensions: [10, 10],\n    };\n\n    if (!jRef.current.jspreadsheet) {\n      tableRef.current = jspreadsheet(jRef.current, {\n        ...options, toolbar:\n          [\n            {\n              type: 'i',\n              content: 'undo',\n              onclick: function () {\n                tableRef.current.undo();\n              }\n            },\n            {\n              type: 'i',\n              content: 'redo',\n              onclick: function () {\n                tableRef.current.redo();\n              }\n            },\n            {\n              type: 'i',\n              content: 'save',\n              onclick: function () {\n                tableRef.current.download();\n              }\n            },\n            {\n              type: 'select',\n              k: 'font-family',\n              v: ['Arial', 'Verdana']\n            },\n            {\n              type: 'select',\n              k: 'font-size',\n              v: ['9px', '10px', '11px', '12px', '13px', '14px', '15px', '16px', '17px', '18px', '19px', '20px']\n            },\n            {\n              type: 'i',\n              content: 'format_align_left',\n              k: 'text-align',\n              v: 'left'\n            },\n            {\n              type: 'i',\n              content: 'format_align_center',\n              k: 'text-align',\n              v: 'center'\n            },\n            {\n              type: 'i',\n              content: 'format_align_right',\n              k: 'text-align',\n              v: 'right'\n            },\n            {\n              type: 'i',\n              content: 'format_bold',\n              k: 'font-weight',\n              v: 'bold'\n            },\n            {\n              type: 'color',\n              content: 'format_color_text',\n              k: 'color'\n            },\n            {\n              type: 'color',\n              content: 'format_color_fill',\n              k: 'background-color'\n            },\n          ],\n      });\n    }\n  }, []);\n\n  const addRow = () => {\n    jRef.current.jexcel.insertRow();\n  };\n\n  return (\n    <div>\n      <div ref={jRef}/>\n      <br/>\n      <input type=\"button\" onClick={addRow} value=\"Add new row\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}